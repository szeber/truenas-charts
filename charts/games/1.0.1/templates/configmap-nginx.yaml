apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
data:
  default.conf: |
    server {
        {{ if .Values.certificate }}
        listen 443 ssl http2 default_server;
        {{ end }}
        listen 80 default_server;

        root /var/www/html;

        {{ if .Values.certificate }}
        ssl_certificate /etc/nginx/ssl/tls.crt;
        ssl_certificate_key /etc/nginx/ssl/tls.key;

        ssl_protocols TLSv1.2 TLSv1.3;
        {{ end }}
    }

  games.conf: |
    server {
        {{ if .Values.certificate }}
        listen 443 ssl http2;
        {{ else }}
        listen 80;
        {{ end }}

        server_name  {{ .Values.baseDomain }};
        root /var/www/games/{{  .Values.docrootSubpath }};
        index index.php index.html;

        {{ if .Values.certificate }}
        ssl_certificate /etc/nginx/ssl/tls.crt;
        ssl_certificate_key /etc/nginx/ssl/tls.key;

        ssl_protocols TLSv1.2 TLSv1.3;
        {{ end }}

        {{ if .Values.authentication.enabled }}
        location / {
            auth_basic "Login required";
            auth_basic_user_file /etc/nginx/htpasswd/{{ .Values.authentication.htpasswdFile }};
        }
        {{ end }}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        location ~ \.php$ {
            fastcgi_split_path_info ^(.+\.php)(/.+)$;
            fastcgi_pass   127.0.0.1:9000;
            fastcgi_index  index.php;
            fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
            include        fastcgi_params;
            fastcgi_buffer_size 16k;
            fastcgi_buffers 4 16k;
        }
    }
  games-sub.conf: |
    server {
        {{ if .Values.certificate }}
        listen 443 ssl http2;
        {{ else }}
        listen 80;
        {{ end }}

        server_name ~^(.*)\.{{ regexReplaceAll "\\." .Values.baseDomain "\\." }};
        root /var/www/games/{{  .Values.docrootSubpath }}/$1;

        {{ if .Values.certificate }}
        ssl_certificate /etc/nginx/ssl/tls.crt;
        ssl_certificate_key /etc/nginx/ssl/tls.key;

        ssl_protocols TLSv1.2 TLSv1.3;
        {{ end }}

        {{ if .Values.authentication.enabled }}
        location / {
            auth_basic "Login required";
            auth_basic_user_file /etc/nginx/htpasswd/{{ .Values.authentication.htpasswdFile }};
        }
        {{ end }}
    }
